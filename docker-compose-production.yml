services:

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    ports:
     - 5173:80
    working_dir: /frontend
    command: ["nginx", "-g", "daemon off;"]
    depends_on:
      backend:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      start_period: 5s
      interval: 30s
      timeout: 10s
      retries: 5
    restart:
      unless-stopped
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 512M

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 5555:5555
    environment:
      ENV_FILE: .env
    working_dir: /backend
    #command: uvicorn main:app --host 0.0.0.0 --port 5555
    command: gunicorn main:app -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:5555 --timeout 360
    depends_on:
      mongo:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "curl", "-i", "http://localhost:5555/health"]
      start_period: 10s
      interval: 30s
      timeout: 10s
      retries: 5
    restart: 
      unless-stopped
    deploy:
      resources:
        reservations:
          cpus: '2'
          memory: 2G
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    runtime: 
      nvidia

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    command: 
      - '--logpath'
      - '/var/log/mongodb/mongod.log'
    environment:
      MONGO_INITDB_DATABASE: mongo
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: mongo
    volumes:
      - db_data:/data/db
      - ./mongod.conf:/etc/mongo/mongod.conf:ro
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://admin:mongo@localhost:27017/admin --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: 
      unless-stopped
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 512M

  mongo-express:
    image: 
      mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH: "true"
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: mongo
    depends_on:
      mongo:
        condition: service_healthy
        restart: true
    deploy:
      resources:
        reservations:
          cpus: '0.2'
          memory: 256M

volumes:
  db_data: